//
// Created by intellij-pest on 2020-08-25
// grammar
// Author: enter
//

unit = { (!EOI ~ sexpr)* ~ EOI }

repl_unit = { !EOI ~ sexpr ~ EOI }

line_comment = _ {
	"#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE?
}

/*
block_comment = _ {
	"/*" ~ (block_comment | (!"}" ~ ANY))* ~ "*/"
}
*/

sexpr = { expr ~ quote? }

expr =
	{ constant
	| quote
	}

quote =
    { tuple
    | list
    | array
}

list = {
    "[" ~ (sexpr ~ (";" ~ sexpr)*)? ~ "]"
}

tuple = {
    "(" ~ (sexpr ~ ("," ~ sexpr)*)? ~ ")"
}

array = {
    "{" ~ (sexpr ~ ("," ~ sexpr)*)? ~ "}"
}

symbol = @{ (!(WHITESPACE | keyword | "\"" | ","  | ";" | "(" | ")" | "[" | "]" | "{" | "}") ~ ANY)+ }

// -------------------------------------------------------

constant =
    { string_lit
	| float_lit
	| int_lit
	| uint_lit
    | symbol
    | bool_lit
    | nil_lit
}

float_lit = @{ int_lit ~ "." ~ uint_lit? }

int_lit = @{ ("+" | "-")? ~ uint_lit }

uint_lit = @{ uns_number_lit }

uns_number_lit = @
	{ uns_number_hex
	| uns_number_bin
	| uns_number_dec
	}

uns_number_dec = _ { ASCII_DIGIT+ }
uns_number_hex = _ { "0x" ~ ASCII_HEX_DIGIT+ }
uns_number_bin = _ { "0x" ~ ASCII_BIN_DIGIT+ }

keyword = @{ bool_lit | nil_lit }

bool_lit = @{ kw_false | kw_true }

nil_lit = _ { "nil" }

kw_false = _ { "false" }
kw_true = _ { "true" }

string_lit = @ { "\"" ~ (escape | (!("\\" | "\"") ~ ANY)+)* ~ "\""}

// char_lit = @ { "\'" ~ (escape | ANY) ~ "\'" }

escape = _{ "\\\\"
		  | "\\\""
		  | "\\'"
		  | "\\n"
		  | "\\r"
		  | "\\t"
		  }

COMMENT = _
    { line_comment
    // | block_comment
    }

WHITESPACE = _
	{ " "
	| "\t"
	| WHITE_SPACE
	| NEWLINE
	}